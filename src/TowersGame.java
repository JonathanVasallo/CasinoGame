
import java.awt.Color;
import java.awt.Point;
import java.awt.event.KeyListener;
import java.io.File;
import static java.lang.Double.parseDouble;
import java.text.DecimalFormat;
import java.util.Random;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Jonathan
 */
public class TowersGame extends javax.swing.JFrame {

    private static Integer counter = 0;
    private static boolean lock = false;
    private String wrongSound = ".//Sounds//convertedWrongsound.wav";
    private String correctSound = ".//Sounds//convertedTrimCorrect.wav";
    private String CashSound = ".//Sounds//convertedWin.wav";
    
    
    private SoundEffect soundE = new SoundEffect();

    /**
     * Creates new form TowersGame
     */
    private static String username;

    public TowersGame(String userN) {
        this.username = userN;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        jButton2.setText("jButton2");

        jLabel6.setText("jLabel6");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(650, 450));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 0, 204));
        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.setLayout(null);

        jButton1.setText("Start Game");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(20, 290, 370, 40);

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setText("1.00");
        jTextField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jTextField2MouseExited(evt);
            }
        });
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField2KeyTyped(evt);
            }
        });
        KeyListener[] keyListeners = jTextField2.getKeyListeners();
        jTextField2.removeKeyListener(keyListeners[0]);
        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {

                if(evt.getKeyChar()=='1' || evt.getKeyChar()=='.' ||evt.getKeyChar()=='2'
                    || evt.getKeyChar()=='3' || evt.getKeyChar()=='4' || evt.getKeyChar()=='5' ||
                    evt.getKeyChar()=='6' || evt.getKeyChar()=='7' || evt.getKeyChar()=='8' ||
                    evt.getKeyChar()=='9' || evt.getKeyChar()=='0'){

                    //System.out.println("worked");
                }else{
                    //System.out.println(evt.getKeyChar() + " Didnt Work");
                    evt.consume();
                }
                //evt.consume();
                //System.out.println("It worked");

            }
        });
        jPanel1.add(jTextField2);
        jTextField2.setBounds(170, 360, 60, 30);

        jButton3.setText("- ($1) ");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(50, 350, 63, 23);

        jButton4.setText("+($1)");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(270, 350, 60, 23);

        String textt = jTextField2.getText();
        double num = parseDouble(textt);
        String numNew = String.valueOf(num*1.48);
        jButton5.setText(numNew);
        jButton5.setEnabled(false);
        jButton5.setBorder(null);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(20, 250, 120, 30);

        String textt2 = jTextField2.getText();
        double num2 = parseDouble(textt2);
        String numNew2 = String.valueOf(num2*1.48);
        jButton6.setText(numNew2);
        jButton6.setEnabled(false);
        jButton6.setBorder(null);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(150, 250, 110, 30);

        String textt3 = jTextField2.getText();
        double num3 = parseDouble(textt3);
        String numNew3 = String.valueOf(num3*1.48);
        jButton7.setText(numNew3);
        jButton7.setEnabled(false);
        jButton7.setBorder(null);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(270, 250, 120, 30);

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Total Bet $");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(170, 340, 60, 14);

        String lab11 = jTextField2.getText();
        double num11 = parseDouble(lab11);
        String numNew11 = String.valueOf(num11*1.48*1.48);
        jLabel2.setText(numNew11);
        jPanel1.add(jLabel2);
        jLabel2.setBounds(60, 225, 80, 14);

        String lab12 = jTextField2.getText();
        double num12 = parseDouble(lab12);
        String numNew12 = String.valueOf(num12*1.48*1.48);
        jLabel3.setText(numNew12);
        jPanel1.add(jLabel3);
        jLabel3.setBounds(190, 225, 80, 14);

        String lab13 = jTextField2.getText();
        double num13 = parseDouble(lab13);
        String numNew13 = String.valueOf(num13*1.48*1.48);
        jLabel4.setText(numNew13);
        jPanel1.add(jLabel4);
        jLabel4.setBounds(310, 225, 80, 14);

        String lab21 = jTextField2.getText();
        double num21 = parseDouble(lab21);
        String numNew21 = String.valueOf(num21*1.48*1.48*1.48);
        jLabel5.setText(numNew21);
        jPanel1.add(jLabel5);
        jLabel5.setBounds(60, 195, 80, 14);

        String lab22 = jTextField2.getText();
        double num22 = parseDouble(lab22);
        String numNew22 = String.valueOf(num22*1.48*1.48*1.48);
        jLabel7.setText(numNew22);
        jPanel1.add(jLabel7);
        jLabel7.setBounds(190, 195, 80, 14);

        String lab23 = jTextField2.getText();
        double num23 = parseDouble(lab23);
        String numNew23 = String.valueOf(num23*1.48*1.48*1.48);
        jLabel8.setText(numNew23);
        jPanel1.add(jLabel8);
        jLabel8.setBounds(310, 195, 80, 14);

        String lab31 = jTextField2.getText();
        double num31 = parseDouble(lab31);
        String numNew31 = String.valueOf(num31*1.48*1.48*1.48*1.48);
        jLabel9.setText(numNew31);
        jPanel1.add(jLabel9);
        jLabel9.setBounds(60, 165, 70, 14);

        String lab32 = jTextField2.getText();
        double num32 = parseDouble(lab32);
        String numNew32 = String.valueOf(num32*1.48*1.48*1.48*1.48);
        jLabel10.setText(numNew32);
        jPanel1.add(jLabel10);
        jLabel10.setBounds(190, 165, 80, 14);

        String lab33 = jTextField2.getText();
        double num33 = parseDouble(lab33);
        String numNew33 = String.valueOf(num33*1.48*1.48*1.48*1.48);
        jLabel11.setText(numNew33);
        jPanel1.add(jLabel11);
        jLabel11.setBounds(310, 165, 80, 14);

        String lab41 = jTextField2.getText();
        double num41 = parseDouble(lab41);
        String numNew41 = String.valueOf(num41*1.48*1.48*1.48*1.48*1.48);
        jLabel12.setText(numNew41);
        jPanel1.add(jLabel12);
        jLabel12.setBounds(60, 135, 70, 14);

        String lab42 = jTextField2.getText();
        double num42 = parseDouble(lab42);
        String numNew42 = String.valueOf(num42*1.48*1.48*1.48*1.48*1.48);
        jLabel13.setText(numNew42);
        jPanel1.add(jLabel13);
        jLabel13.setBounds(190, 135, 80, 14);

        String lab43 = jTextField2.getText();
        double num43 = parseDouble(lab43);
        String numNew43 = String.valueOf(num43*1.48*1.48*1.48*1.48*1.48);
        jLabel14.setText(numNew43);
        jPanel1.add(jLabel14);
        jLabel14.setBounds(310, 135, 70, 14);

        String lab51 = jTextField2.getText();
        double num51 = parseDouble(lab51);
        String numNew51 = String.valueOf(num51*1.48*1.48*1.48*1.48*1.48*1.48);
        jLabel15.setText(numNew51);
        jPanel1.add(jLabel15);
        jLabel15.setBounds(60, 105, 80, 14);

        String lab52 = jTextField2.getText();
        double num52 = parseDouble(lab52);
        String numNew52 = String.valueOf(num52*1.48*1.48*1.48*1.48*1.48*1.48);
        jLabel16.setText(numNew52);
        jPanel1.add(jLabel16);
        jLabel16.setBounds(190, 105, 80, 14);

        String lab53 = jTextField2.getText();
        double num53 = parseDouble(lab53);
        String numNew53 = String.valueOf(num53*1.48*1.48*1.48*1.48*1.48*1.48);
        jLabel17.setText(numNew53);
        jPanel1.add(jLabel17);
        jLabel17.setBounds(310, 105, 70, 14);

        String lab61 = jTextField2.getText();
        double num61 = parseDouble(lab61);
        String numNew61 = String.valueOf(num61*1.48*1.48*1.48*1.48*1.48*1.48*1.48);
        jLabel18.setText(numNew61);
        jPanel1.add(jLabel18);
        jLabel18.setBounds(60, 75, 80, 14);

        String lab62 = jTextField2.getText();
        double num62 = parseDouble(lab62);
        String numNew62 = String.valueOf(num62*1.48*1.48*1.48*1.48*1.48*1.48*1.48);
        jLabel19.setText(numNew62);
        jPanel1.add(jLabel19);
        jLabel19.setBounds(190, 75, 70, 14);

        String lab63 = jTextField2.getText();
        double num63 = parseDouble(lab63);
        String numNew63 = String.valueOf(num63*1.48*1.48*1.48*1.48*1.48*1.48*1.48);
        jLabel20.setText(numNew63);
        jPanel1.add(jLabel20);
        jLabel20.setBounds(310, 75, 70, 14);

        String lab01 = jTextField2.getText();
        double num01 = parseDouble(lab01);
        String numNew01 = String.valueOf(num01*1.48);
        jLabel21.setText(numNew01);
        jLabel21.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jLabel21AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jPanel1.add(jLabel21);
        jLabel21.setBounds(60, 259, 66, 14);

        String lab02 = jTextField2.getText();
        double num02 = parseDouble(lab02);
        String numNew02 = String.valueOf(num02*1.48);
        jLabel22.setText(numNew02);
        jPanel1.add(jLabel22);
        jLabel22.setBounds(190, 259, 66, 14);

        String lab03 = jTextField2.getText();
        double num03 = parseDouble(lab03);
        String numNew03 = String.valueOf(num03*1.48);
        jLabel23.setText(numNew03);
        jPanel1.add(jLabel23);
        jLabel23.setBounds(310, 259, 66, 14);

        jLabel28.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jonathan\\Documents\\burptower.jpg")); // NOI18N
        jLabel28.setText("jLabel28");
        jPanel1.add(jLabel28);
        jLabel28.setBounds(-370, -10, 790, 430);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(80, 0, 410, 400);

        jButton9.setText("Return To Hub");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9);
        jButton9.setBounds(500, 380, 110, 23);

        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText(username+"'s Balance");
        getContentPane().add(jLabel24);
        jLabel24.setBounds(500, 10, 120, 20);

        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.setText("");
        try{
            String host = "jdbc:derby://localhost:1527/Accounts";
            String uName = "Allaccounts";
            String uPass = "accounts";
            Connection con = DriverManager.getConnection(host,uName,uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM USERINFO";
            ResultSet rs = stmt.executeQuery(SQL);

            while (rs.next()){
                String userN = rs.getString("Username");
                double userB = rs.getDouble("Balance");
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(userB));

                if(userN.equals(username)){
                    String convert = String.valueOf(sendBackDecimal);
                    jTextField3.setText("$"+convert);

                }

            } // end while

        }catch(SQLException ex){
            System.out.println("error");
        }
        jTextField3.setEditable(false);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField3);
        jTextField3.setBounds(511, 30, 100, 30);

        jLabel25.setForeground(new java.awt.Color(255, 255, 255));
        jLabel25.setText("Cash Out Value");
        getContentPane().add(jLabel25);
        jLabel25.setBounds(520, 260, 100, 40);

        jTextField4.setEditable(false);
        jTextField4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField4);
        jTextField4.setBounds(510, 300, 90, 50);

        jLabel26.setIcon(new javax.swing.ImageIcon("C:\\Users\\Jonathan\\Documents\\burptower.jpg")); // NOI18N
        jLabel26.setText("jLabel26");
        getContentPane().add(jLabel26);
        jLabel26.setBounds(-290, -20, 950, 450);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        //Key Pressed

    }//GEN-LAST:event_formKeyPressed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // Return back to hub button
        if (lock == false) {

            PlayingArea area = new PlayingArea(username);
            area.setVisible(true);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(null, "You must cashout before returning to the game hub");
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
        // TODO add your handling code here:
        try {
            UpdateLabels();
            refreshButtonBasedOnText();

        } catch (NumberFormatException w) {
            jTextField2.setText("1.00");
        }
    }//GEN-LAST:event_jPanel1MouseMoved

    private void jLabel21AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jLabel21AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel21AncestorAdded

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // Third Option for Tower Game
        // Second Choice button Tower Game
        if (jButton7.getBackground() != Color.red) {

            int ButtonAllocationNumber = 2;

            int TowersLogic = TowersLogic();
            if (ButtonAllocationNumber != TowersLogic) { // that means the right one was chosen
                MoveButtonUp();
                soundE.setFile(correctSound); // path to Correct.wav
                soundE.play();
                UpdateButtonName();
                // First Choice button Tower Game
                updateCashOutValue();
                validate();
            } else { // you LOSE
                // make background red
                resetCashOut();
                soundE.setFile(wrongSound); // path to Correct.wav
                soundE.play();
                jButton1.setText("Start Game");
                jButton7.setOpaque(false);
                jButton7.setBackground(Color.red);
                jButton5.setEnabled(false);
                jButton6.setEnabled(false);
                resetPregame();
                lock = false;
            }
        } // end opague
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // Second Choice button Tower Game
        if (jButton6.getBackground() != Color.red) {
            int ButtonAllocationNumber = 1;

            int TowersLogic = TowersLogic();
            if (ButtonAllocationNumber != TowersLogic) { // that means the right one was chosen
                soundE.setFile(correctSound); // path to Correct.wav
                soundE.play();
                MoveButtonUp();
                UpdateButtonName();
                // First Choice button Tower Game
                updateCashOutValue();
                validate();
            } else { // you LOSE
                resetCashOut();
                soundE.setFile(wrongSound); // path to Correct.wav
                soundE.play();
                jButton1.setText("Start Game");
                jButton6.setOpaque(false);
                jButton6.setBackground(Color.red);
                jButton5.setEnabled(false);
                jButton7.setEnabled(false);
                resetPregame();
                lock = false;

            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        if (jButton5.getBackground() != Color.red) {
            int ButtonAllocationNumber = 0;
            int TowersLogic = TowersLogic();
            if (ButtonAllocationNumber != TowersLogic) { // that means the right one was chosen
                soundE.setFile(correctSound); // path to Correct.wav
                soundE.play();
                MoveButtonUp();
                UpdateButtonName();
                
                // First Choice button Tower Game
                updateCashOutValue();
                // startCorrectSound(); figure out later
                validate();
            } else { // you LOSE
                resetCashOut();
                soundE.setFile(wrongSound); // path to Correct.wav
                soundE.play();
                jButton1.setText("Start Game");
                jButton5.setOpaque(false);
                jButton5.setBackground(Color.red);
                jButton6.setEnabled(false);
                jButton7.setEnabled(false);
                resetPregame();
                lock = false;
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        try {

            String text = jTextField2.getText(); // gets the total bet

            double number = parseDouble(text);
            //System.out.println(number);
            double number2 = number + 1;
            String sendBack = String.valueOf(number2);
            jTextField2.setText(sendBack); // sets the total bet currently to -1 of its current value
            UpdateLabels();
            validate();
        } catch (NumberFormatException v) {
            jTextField2.setText("1.00");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //minus one dollar
        try {

            String text = jTextField2.getText(); // gets the total bet
            double number = parseDouble(text);
            //System.out.println(number);
            if (number > 1) { // if greater than 1.0
                double number2 = number - 1;
                String sendBack = String.valueOf(number2);
                jTextField2.setText(sendBack); // sets the total bet currently to -1 of its current value
                UpdateLabels();
            } else {
                JOptionPane.showMessageDialog(null, "Total Bet Cannot be 0 or a Negative Number");
            }
            validate();
        } catch (NumberFormatException r) {
            jTextField2.setText("1.00");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextField2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyTyped
        // TODO add your handling code here:

        if (evt.getKeyChar() == '1' || evt.getKeyChar() == '2' || evt.getKeyChar() == '3'
                || evt.getKeyChar() == '4' || evt.getKeyChar() == '5' || evt.getKeyChar() == '6'
                || evt.getKeyChar() == '7' || evt.getKeyChar() == '8' || evt.getKeyChar() == '9'
                || evt.getKeyChar() == '0') {
           
        }
    }//GEN-LAST:event_jTextField2KeyTyped

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void jTextField2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextField2MouseExited
        //Mouse Exited event

        validate();
        // String tester = jTextField2.getText();
        // System.out.println(tester + "testing should be number");
        UpdateLabels();
       
    }//GEN-LAST:event_jTextField2MouseExited

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Start Game Button

        if (jButton1.getText().equals("Start Game")) {
            resetCashOut();
            if (jButton5.isEnabled() == false || jButton5.getBackground() == Color.red
                    || jButton6.getBackground() == Color.red || jButton7.getBackground() == Color.red) { // means its a fresh game
                
                jButton5.setBackground(new JButton().getBackground());
                jButton6.setBackground(new JButton().getBackground());
                jButton7.setBackground(new JButton().getBackground());
                jButton5.setEnabled(false);
                jButton6.setEnabled(false);
                jButton7.setEnabled(false);
                resetButtonLocation();
                counter = 0;
                refreshButtonBasedOnText();
                boolean minusBetFromBalance = minusBetFromBalance();
                if (minusBetFromBalance == true) { // only if sufficient funds are done

                    lock = true;
                    upDateBalance();
                    String check = jTextField2.getText();
                    double checknum = parseDouble(check);

                    if (checknum > 10000) { // tells user the
                        JOptionPane.showMessageDialog(null, "Maximum Bet is $10,000");
                        lock = false;
                    } else {

                        jButton1.setText("Cash Out");
                        jButton3.setEnabled(false);
                        jButton4.setEnabled(false);
                        jTextField2.setEditable(false); // cant change bet one the game starts
                        jButton5.setEnabled(true);
                        jButton6.setEnabled(true);
                        jButton7.setEnabled(true);

                        validate();
                    } // end else
                } // only applies if Start game is the Button name
            }
        } else if (jButton1.getText().equals("Cash Out")) { // if user cashes out

            if (counter != 0) {
                lock = false;
                soundE.setFile(CashSound); // path to Correct.wav
                soundE.play();
                AddWinToBalance();
                resetCashOut();

                jButton5.setLocation(20, 250);
                jButton6.setLocation(150, 250);
                jButton7.setLocation(270, 250);
                jButton5.setVisible(true);
                jButton6.setVisible(true);
                jButton7.setVisible(true);
                counter = 0;
                jButton1.setText("Start Game");
                jButton5.setEnabled(false);
                jButton6.setEnabled(false);
                jButton7.setEnabled(false);
                jTextField2.setEditable(true);

                // here you shouldreset location of buttons to reset game instantly cashed out
                jButton3.setEnabled(true); // resets ability to bet higher /lower
                jButton4.setEnabled(true);
                // can change bet one the game starts
                validate();
                // reset buttons and labels x=20 y=280 Button5 button6+7 is just an xVal Difference

            }/* end if*/ else {
                JOptionPane.showMessageDialog(null, "You have started the game and must select a box before cashing out.");
            }

            validate();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TowersGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TowersGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TowersGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TowersGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TowersGame(username).setVisible(true);
            }
        });
    }

    public void UpdateButtonName() { // gets the buttons number to be the amount it needs to be 
        //String textFromBet = jTextField2.getText();
        //double num = parseDouble(textFromBet);
        //double numWin = num *1.48; 
        //String newName = String.valueOf(numWin); // should be set as the name of the button (winning amount if correct) 
        //jButton5.setText(newName);
        if (counter < 7) {
            String value = jButton5.getText();
            double newVal = parseDouble(value);
            double newerVal = newVal * 1.48;
            DecimalFormat df = new DecimalFormat("#.##");
            double sendBacDec = Double.valueOf(df.format(newerVal));
            String newString = String.valueOf(sendBacDec);
            jButton5.setText(newString);
            jButton6.setText(newString);
            jButton7.setText(newString);
        }
    }

    public void MoveButtonUp() {
        counter++;
        if (counter <= 7) {

            Point location = jButton5.getLocation();
            int xValue = location.x;
            int yValue = location.y;
            
            Point location2 = jButton6.getLocation();
            int xValue2 = location2.x;
            int yValue2 = location2.y;
            
            Point location3 = jButton7.getLocation();
            int xValue3 = location3.x;
            int yValue3 = location3.y;
            

            if (yValue > 70) { // means its below 7 wins 
                jButton5.setLocation(xValue, yValue - 30); //moves up 10 pixels , theyre not done yet       
                jButton5.setEnabled(true); // enables first button to be pressed 
                jButton6.setLocation(xValue2, yValue2 - 30); //moves up 10 pixels , theyre not done yet       
                jButton6.setEnabled(true); // enables first button to be pressed 
                jButton7.setLocation(xValue3, yValue3 - 30); //moves up 10 pixels , theyre not done yet       
                jButton7.setEnabled(true); // enables first button to be pressed 
            } else {
                JOptionPane.showMessageDialog(null, "BIG WIN! You've Won $" + jLabel19.getText() + " Dollars!");
                jButton5.setEnabled(false);
                jButton6.setEnabled(false);
                jButton7.setEnabled(false);
                validate();
            }
        } else { // auto cashout 

            counter = 0;
        }   // end if counter 

    }

    public int TowersLogic() {
        Random rand = new Random();
        int random_integer = rand.nextInt(999 - 1) + 1;
        int WrongBox = random_integer % 3;
        
        return WrongBox;

    }

    public void UpdateLabels() {
        try {
            String number = jTextField2.getText();

            double doubleNumber = parseDouble(number);

            double mult1 = 1.48;
            double mult2 = 1.48 * 1.48;
            double mult3 = 1.48 * 1.48 * 1.48;
            double mult4 = 1.48 * 1.48 * 1.48 * 1.48;
            double mult5 = 1.48 * 1.48 * 1.48 * 1.48 * 1.48;
            double mult6 = 1.48 * 1.48 * 1.48 * 1.48 * 1.48 * 1.48;
            double mult7 = 1.48 * 1.48 * 1.48 * 1.48 * 1.48 * 1.48 * 1.48;

            DecimalFormat df = new DecimalFormat("#.##");
            double doubleNum = Double.valueOf(df.format(mult1 * doubleNumber));
            String Str1 = String.valueOf(doubleNum);
            double doubleNum2 = Double.valueOf(df.format(mult2 * doubleNumber));
            String Str2 = String.valueOf(doubleNum2);
            double doubleNum3 = Double.valueOf(df.format(mult3 * doubleNumber));
            String Str3 = String.valueOf(doubleNum3);
            double doubleNum4 = Double.valueOf(df.format(mult4 * doubleNumber));
            String Str4 = String.valueOf(doubleNum4);
            double doubleNum5 = Double.valueOf(df.format(mult5 * doubleNumber));
            String Str5 = String.valueOf(doubleNum5);
            double doubleNum6 = Double.valueOf(df.format(mult6 * doubleNumber));
            String Str6 = String.valueOf(doubleNum6);
            double doubleNum7 = Double.valueOf(df.format(mult7 * doubleNumber));
            String Str7 = String.valueOf(doubleNum7);

            jLabel2.setText(Str2);
            jLabel3.setText(Str2);
            jLabel4.setText(Str2);
            jLabel5.setText(Str3);

            jLabel7.setText(Str3);
            jLabel8.setText(Str3);
            jLabel9.setText(Str4);
            jLabel10.setText(Str4);
            jLabel11.setText(Str4);
            jLabel12.setText(Str5);
            jLabel13.setText(Str5);
            jLabel14.setText(Str5);
            jLabel15.setText(Str6);
            jLabel16.setText(Str6);
            jLabel17.setText(Str6);
            jLabel18.setText(Str7);
            jLabel19.setText(Str7);
            jLabel20.setText(Str7);
            jLabel21.setText(Str1);
            jLabel22.setText(Str1);
            jLabel23.setText(Str1);
        } catch (NumberFormatException e) {

        }

    }// end update labels 

    public void refreshButtonBasedOnText() {

        if (counter == 0) {
            String str = jTextField2.getText();
            double multStr = parseDouble(str);
            double firstbutton = multStr * 1.48;
            DecimalFormat df = new DecimalFormat("#.##");
            double sendBackDecimal = Double.valueOf(df.format(firstbutton));
            String newStr = String.valueOf(sendBackDecimal);
            jButton5.setText(newStr);
            jButton6.setText(newStr);
            jButton7.setText(newStr);

        }
    }

    public void resetPregame() {

        jTextField2.setEditable(true);
        jButton3.setEnabled(true);
        jButton4.setEnabled(true);

    }

    public void resetButtonLocation() {
        jButton5.setLocation(20, 250);
        jButton6.setLocation(150, 250);
        jButton7.setLocation(270, 250);
    }

    public void updateCashOutValue() {
        String str = jTextField2.getText();
        double multStr = parseDouble(str);
        double firstbutton = 1.48;
        double pow = Math.pow(firstbutton, counter);
        DecimalFormat df = new DecimalFormat("#.##");
        double sendBackDecimal = Double.valueOf(df.format(pow * multStr));
        String newStr = String.valueOf(sendBackDecimal);
        jTextField4.setText(newStr);
    }

    public void resetCashOut() {
        jTextField4.setText("");

    }

    public boolean minusBetFromBalance() {
        boolean valid = true;
        String bet = jTextField2.getText();
        double betNum = parseDouble(bet);
        DecimalFormat df = new DecimalFormat("#.##");
        double sendBackDecimal = Double.valueOf(df.format(betNum));
        double oldBal = 0;
        try {

            // somehow incorperate the database info here Username + Pass
            String host = "jdbc:derby://localhost:1527/Accounts";
            String uName = "Allaccounts";
            String uPass = "accounts";

            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL2 = "SELECT * FROM USERINFO";
            ResultSet rs = stmt.executeQuery(SQL2);

            while (rs.next()) {
                String userN = rs.getString("Username");
                double userB = rs.getDouble("Balance");

                if (userN.equals(username)) {
                    oldBal = userB;
                    break;
                }

            }
            if (oldBal - sendBackDecimal > 0 && sendBackDecimal <= 10000) {

                String SQL = "update userinfo set balance = ? where username = ?";
                //String query = "update users set num_points = ? where first_name = ?";
                PreparedStatement preparedStmt = con.prepareStatement(SQL);
                preparedStmt.setDouble(1, oldBal - sendBackDecimal);
                preparedStmt.setString(2, username);
                preparedStmt.executeUpdate();
                upDateBalance();
                validate();

                con.close();
            } else if (oldBal - sendBackDecimal < 0) {
                valid = false;
                JOptionPane.showMessageDialog(null, "Insufficient Funds, You can deposit money in the Game Hub.");
            } else if (sendBackDecimal > 10000) {
                //JOptionPane.showMessageDialog(null, "Maximum Bet is $10,000.");
            } else {

            }

        } catch (SQLException ex) {
            System.out.println("err");
            //Logger.getLogger(CasinoHome.class.getName()).log(Level.SEVERE, null, ex);
            //JOptionPane.showMessageDialog(null, "That Username has already been selected, choose another one");
            System.out.println(ex.getMessage());
        }
        return valid;

    }

    public void upDateBalance() {
        try {
            String host = "jdbc:derby://localhost:1527/Accounts";
            String uName = "Allaccounts";
            String uPass = "accounts";
            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM USERINFO";
            ResultSet rs = stmt.executeQuery(SQL);

            while (rs.next()) {
                String userN = rs.getString("Username");
                double userB = rs.getDouble("Balance");
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(userB));

                if (userN.equals(username)) {
                    String convert = String.valueOf(sendBackDecimal);
                    jTextField3.setText("$"+convert);

                }

            } // end while 

        } catch (SQLException ex) {
            System.out.println("error");
        }
    }

    public void AddWinToBalance() {

        String wins = jTextField4.getText();
        double betNum = parseDouble(wins);
        DecimalFormat df = new DecimalFormat("#.##");
        double sendBackDecimal = Double.valueOf(df.format(betNum));
        double oldBal = 0;
        try {

            // somehow incorperate the database info here Username + Pass
            String host = "jdbc:derby://localhost:1527/Accounts";
            String uName = "Allaccounts";
            String uPass = "accounts";

            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL2 = "SELECT * FROM USERINFO";
            ResultSet rs = stmt.executeQuery(SQL2);

            while (rs.next()) {
                String userN = rs.getString("Username");
                double userB = rs.getDouble("Balance");

                if (userN.equals(username)) {
                    oldBal = userB;
                    break;
                }

            }

            String SQL = "update userinfo set balance = ? where username = ?";
            //String query = "update users set num_points = ? where first_name = ?";
            PreparedStatement preparedStmt = con.prepareStatement(SQL);
            preparedStmt.setDouble(1, oldBal + sendBackDecimal);
            preparedStmt.setString(2, username);
            preparedStmt.executeUpdate();
            upDateBalance();
            validate();

            con.close();

        } catch (SQLException ex) {
            System.out.println("err");
            //Logger.getLogger(CasinoHome.class.getName()).log(Level.SEVERE, null, ex);
            //JOptionPane.showMessageDialog(null, "That Username has already been selected, choose another one");
            System.out.println(ex.getMessage());
        }

    }

    public void startCorrectSound() {
        String path = "C:\\Users\\Jonathan\\Documents\\NetBeansProjects\\casinofinal\\VasalloFinalTrial\\Correct.wav";
        Audio audioObject = new Audio();
        audioObject.playMusic(path);

    }

    public class SoundEffect {

        Clip sound; // use clip to play sound effect

        public void setFile(String soundFileName) {
            try {
                File file = new File(soundFileName);
                AudioInputStream soundAIS = AudioSystem.getAudioInputStream(file);
                sound = AudioSystem.getClip();
                sound.open(soundAIS);

            } catch (Exception e) {

            }

        }

        public void play() {
            sound.setFramePosition(0);
            sound.start();
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    // End of variables declaration//GEN-END:variables
}
