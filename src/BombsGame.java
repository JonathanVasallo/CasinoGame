
import java.sql.*;
import java.awt.Color;
import java.awt.event.KeyListener;
import java.io.File;
import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JOptionPane;
import java.text.DecimalFormat;
import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Jonathan
 */
public class BombsGame extends javax.swing.JFrame {

    /**
     * Creates new form BombsGame
     */
    ArrayList<String> doubleHolder = new ArrayList();
    ArrayList<Integer> determineWrongBoxes = new ArrayList();
    ArrayList<String> check = new ArrayList();
    private static String username;
    private String wrongSound = ".//Sounds//convertedWrongsound.wav";
    private String correctSound = ".//Sounds//convertedTrimCorrect.wav";
    private String CashSound = ".//Sounds//convertedWin.wav";
    private SoundEffect soundE = new SoundEffect();

    public BombsGame(String uName) {
        this.username = uName;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton29 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jButton26 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton27 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton28 = new javax.swing.JButton();
        jButton30 = new javax.swing.JButton();
        jButton31 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jButton29.setText("jButton29");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(565, 450));
        setResizable(false);
        getContentPane().setLayout(null);

        jButton1.setForeground(new java.awt.Color(255, 255, 102));
        jButton1.setText("★");
        jButton1.setEnabled(false);
        jButton1.setOpaque(false);
        jButton1.setBackground(Color.blue);
        validate();
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(320, 180, 60, 50);

        jButton2.setForeground(new java.awt.Color(255, 255, 102));
        jButton2.setText("★");
        jButton2.setEnabled(false);
        jButton2.setOpaque(false);
        jButton2.setBackground(Color.blue);
        validate();
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(140, 130, 60, 50);

        jButton3.setForeground(new java.awt.Color(255, 255, 102));
        jButton3.setText("★");
        jButton3.setEnabled(false);
        jButton3.setOpaque(false);
        jButton3.setBackground(Color.blue);
        validate();
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3);
        jButton3.setBounds(260, 180, 60, 50);

        jButton4.setForeground(new java.awt.Color(255, 255, 102));
        jButton4.setText("★");
        jButton4.setEnabled(false);
        jButton4.setOpaque(false);
        jButton4.setBackground(Color.blue);
        validate();
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4);
        jButton4.setBounds(140, 180, 60, 50);

        jButton5.setForeground(new java.awt.Color(255, 255, 102));
        jButton5.setText("★");
        jButton5.setEnabled(false);
        jButton5.setOpaque(false);
        jButton5.setBackground(Color.blue);
        validate();
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5);
        jButton5.setBounds(200, 180, 60, 50);

        jButton6.setForeground(new java.awt.Color(255, 255, 102));
        jButton6.setText("★");
        jButton6.setToolTipText("");
        jButton6.setEnabled(false);
        jButton6.setOpaque(false);
        jButton6.setBackground(Color.blue);
        validate();
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6);
        jButton6.setBounds(80, 80, 60, 50);

        jButton7.setForeground(new java.awt.Color(255, 255, 102));
        jButton7.setText("★");
        jButton7.setEnabled(false);
        jButton7.setOpaque(false);
        jButton7.setBackground(Color.blue);
        validate();
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7);
        jButton7.setBounds(80, 180, 60, 50);

        jButton8.setForeground(new java.awt.Color(255, 255, 102));
        jButton8.setText("★");
        jButton8.setEnabled(false);
        jButton8.setOpaque(false);
        jButton8.setBackground(Color.blue);
        validate();
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8);
        jButton8.setBounds(80, 230, 60, 50);

        jButton9.setForeground(new java.awt.Color(255, 255, 102));
        jButton9.setText("★");
        jButton9.setEnabled(false);
        jButton9.setOpaque(false);
        jButton9.setBackground(Color.blue);
        validate();
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9);
        jButton9.setBounds(140, 230, 60, 50);

        jButton10.setForeground(new java.awt.Color(255, 255, 102));
        jButton10.setText("★");
        jButton10.setEnabled(false);
        jButton10.setOpaque(false);
        jButton10.setBackground(Color.blue);
        validate();
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton10);
        jButton10.setBounds(200, 230, 60, 50);

        jButton11.setForeground(new java.awt.Color(255, 255, 102));
        jButton11.setText("★");
        jButton11.setEnabled(false);
        jButton11.setOpaque(false);
        jButton11.setBackground(Color.blue);
        validate();
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton11);
        jButton11.setBounds(260, 230, 60, 50);

        jButton12.setForeground(new java.awt.Color(255, 255, 102));
        jButton12.setText("★");
        jButton12.setEnabled(false);
        jButton12.setOpaque(false);
        jButton12.setBackground(Color.blue);
        validate();
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton12);
        jButton12.setBounds(320, 230, 60, 50);

        jButton13.setForeground(new java.awt.Color(255, 255, 102));
        jButton13.setText("★");
        jButton13.setEnabled(false);
        jButton13.setOpaque(false);
        jButton13.setBackground(Color.blue);
        validate();
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton13);
        jButton13.setBounds(200, 80, 60, 50);

        jButton14.setForeground(new java.awt.Color(255, 255, 102));
        jButton14.setText("★");
        jButton14.setEnabled(false);
        jButton14.setOpaque(false);
        jButton14.setBackground(Color.blue);
        validate();
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton14);
        jButton14.setBounds(260, 280, 60, 50);

        jButton15.setForeground(new java.awt.Color(255, 255, 102));
        jButton15.setText("★");
        jButton15.setEnabled(false);
        jButton15.setOpaque(false);
        jButton15.setBackground(Color.blue);
        validate();
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton15);
        jButton15.setBounds(320, 280, 60, 50);

        jButton16.setOpaque(false);
        jButton16.setBackground(Color.blue);
        validate();
        jButton16.setForeground(new java.awt.Color(255, 255, 102));
        jButton16.setText("★");
        jButton16.setEnabled(false);
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton16);
        jButton16.setBounds(200, 280, 60, 50);

        jButton17.setForeground(new java.awt.Color(255, 255, 102));
        jButton17.setText("★");
        jButton17.setEnabled(false);
        jButton17.setOpaque(false);
        jButton17.setBackground(Color.blue);
        validate();
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton17);
        jButton17.setBounds(140, 280, 60, 50);

        jButton18.setForeground(new java.awt.Color(255, 255, 102));
        jButton18.setText("★");
        jButton18.setEnabled(false);
        jButton18.setOpaque(false);
        jButton18.setBackground(Color.blue);
        validate();
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton18);
        jButton18.setBounds(80, 280, 60, 50);

        jButton19.setForeground(new java.awt.Color(255, 255, 102));
        jButton19.setText("★");
        jButton19.setEnabled(false);
        jButton19.setOpaque(false);
        jButton19.setBackground(Color.blue);
        validate();
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton19);
        jButton19.setBounds(80, 130, 60, 50);

        jButton20.setForeground(new java.awt.Color(255, 255, 102));
        jButton20.setText("★");
        jButton20.setEnabled(false);
        jButton20.setOpaque(false);
        jButton20.setBackground(Color.blue);
        validate();
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton20);
        jButton20.setBounds(140, 80, 60, 50);

        jButton21.setForeground(new java.awt.Color(255, 255, 102));
        jButton21.setText("★");
        jButton21.setEnabled(false);
        jButton21.setOpaque(false);
        jButton21.setBackground(Color.blue);
        validate();
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton21);
        jButton21.setBounds(200, 130, 60, 50);

        jButton22.setForeground(new java.awt.Color(255, 255, 102));
        jButton22.setText("★");
        jButton22.setEnabled(false);
        jButton22.setOpaque(false);
        jButton22.setBackground(Color.blue);
        validate();
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton22);
        jButton22.setBounds(260, 80, 60, 50);

        jButton23.setForeground(new java.awt.Color(255, 255, 102));
        jButton23.setText("★");
        jButton23.setEnabled(false);
        jButton23.setOpaque(false);
        jButton23.setBackground(Color.blue);
        validate();
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton23);
        jButton23.setBounds(320, 80, 60, 50);

        jButton24.setForeground(new java.awt.Color(255, 255, 102));
        jButton24.setText("★");
        jButton24.setEnabled(false);
        jButton24.setOpaque(false);
        jButton24.setBackground(Color.blue);
        validate();
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton24);
        jButton24.setBounds(320, 130, 60, 50);

        jButton25.setForeground(new java.awt.Color(255, 255, 102));
        jButton25.setText("★");
        jButton25.setEnabled(false);
        jButton25.setOpaque(false);
        jButton25.setBackground(Color.blue);
        validate();
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton25);
        jButton25.setBounds(260, 130, 60, 50);

        jButton26.setText("Return To Hub");
        jButton26.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton26ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton26);
        jButton26.setBounds(420, 340, 110, 40);

        jLabel1.setText("Total Bet: ");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(150, 345, 60, 14);

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.setText("1.00");
        jTextField1.setEditable(true);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        KeyListener[] keyListeners = jTextField1.getKeyListeners();
        jTextField1.removeKeyListener(keyListeners[0]);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {

                if(evt.getKeyChar()=='1' || evt.getKeyChar()=='.' ||evt.getKeyChar()=='2'
                    || evt.getKeyChar()=='3' || evt.getKeyChar()=='4' || evt.getKeyChar()=='5' ||
                    evt.getKeyChar()=='6' || evt.getKeyChar()=='7' || evt.getKeyChar()=='8' ||
                    evt.getKeyChar()=='9' || evt.getKeyChar()=='0'){

                    //System.out.println("worked");
                }else{
                    //System.out.println(evt.getKeyChar() + " Didnt Work");
                    evt.consume();
                }
                //evt.consume();
                //System.out.println("It worked");

            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(220, 335, 60, 30);

        jButton27.setText("Start Game");
        jButton27.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton27ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton27);
        jButton27.setBounds(80, 370, 300, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Choose Number of Bombs");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(20, 20, 170, 40);

        jButton28.setText("15");
        jButton28.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton28ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton28);
        jButton28.setBounds(300, 20, 50, 40);

        jButton30.setText("3");
        jButton30.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton30ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton30);
        jButton30.setBounds(200, 20, 50, 40);

        jButton31.setText("7");
        jButton31.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton31ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton31);
        jButton31.setBounds(250, 20, 50, 40);

        jTextField2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField2.setEditable(false);
        try{
            String host = "jdbc:derby://localhost:1527/Accounts";
            String uName = "Allaccounts";
            String uPass = "accounts";
            Connection con = DriverManager.getConnection(host,uName,uPass);
            Statement stmt = con.createStatement();
            String SQL = "SELECT * FROM USERINFO";
            ResultSet rs = stmt.executeQuery(SQL);

            while (rs.next()){
                String userN = rs.getString("Username");
                double userB = rs.getDouble("Balance");
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(userB));

                if(userN.equals(username)){
                    String convert = String.valueOf(sendBackDecimal);
                    jTextField2.setText("$"+convert);

                }

            } // end while

        }catch(SQLException ex){
            System.out.println("error");
        }
        getContentPane().add(jTextField2);
        jTextField2.setBounds(430, 60, 90, 30);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText(username+"'s Balance");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(425, 40, 110, 14);

        jTextField3.setEditable(false);
        jTextField3.setText("0.00");
        jTextField3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField3);
        jTextField3.setBounds(420, 250, 90, 30);

        jLabel4.setText("Cash Out Value");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(420, 224, 90, 20);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/booooom.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(-540, -10, 1140, 460);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jButton1.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton1.setEnabled(true);
            jButton1.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton1.getBackground() != Color.green) { // in the clear 

            jButton1.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (jButton3.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton3.setEnabled(true);
            jButton3.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton3.getBackground() != Color.green) { // in the clear 

            jButton3.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        if (jButton23.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton23.setEnabled(true);
            jButton23.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton23.getBackground() != Color.green) { // in the clear 

            jButton23.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
                
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
       if (jButton6.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton6.setEnabled(true);
            jButton6.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton6.getBackground() != Color.green) { // in the clear 

            jButton6.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
                
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        if (jButton11.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton11.setEnabled(true);
            jButton11.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton11.getBackground() != Color.green) { // in the clear 

            jButton11.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
           
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
                
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        if (jButton18.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton18.setEnabled(true);
            jButton18.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton18.getBackground() != Color.green) { // in the clear 

            jButton18.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
              
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jButton26ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton26ActionPerformed
        // TODO add your handling code here:
        if (jButton27.getText().equals("Start Game")) {

            PlayingArea area1 = new PlayingArea(username);
            this.setVisible(false);
            area1.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(null, "Must Cash Out First Before return to Hub");
        }
    }//GEN-LAST:event_jButton26ActionPerformed

    private void jButton27ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton27ActionPerformed
        // TODO add your handling code here:
        // this all only happens if the first time its clicked it says start game
        String betTest = jTextField1.getText();
        double numTest = parseDouble(betTest);
        
        if (jButton27.getText().equals("Start Game") && numTest>0 && numTest<=10000) {

            int determinant = 0;
            if (jButton30.getBackground() == Color.green) {
                determinant = 3;
            }
            if (jButton31.getBackground() == Color.green) {
                determinant = 7;
            }
            if (jButton28.getBackground() == Color.green) {
                determinant = 15;
            }

            if (determinant == 3 || determinant == 7 || determinant == 15) {
                
                determineWrongBoxes.add(determinant);  // added   
                minusBetFromBalance();
                disableOnStart(); // disables ability to change the # of Bombs and Enables Buttons 1-25
                refreshAllBlue();
                check.clear();
                String bombsLogic = bombsLogic(determinant);
                
                jTextField1.setEditable(false);
                jButton27.setText("Cash Out"); // renames it 
                startBombGame(bombsLogic); // starts a game
                bombsResetGame(); // extinguishes the only dATA we needed for game to start in the first place 
                
            } else {
                JOptionPane.showMessageDialog(null, "Please Select the number of bombs.");
            }

        } // end if START GAME BUTTON TEXT CONDITION 
        else if (jButton27.getText().equals("Cash Out")) { // end the game and pay the player
            // reset game
            soundE.setFile(CashSound); // path to Correct.wav
                soundE.play();
            boolean checkIfPlayerPlayed = checkIfPlayerPlayed();
            if (checkIfPlayerPlayed == false) { // nothing is gunna happen if the user starts a game and doesnt play
                jTextField1.setEditable(true);   
                doubleHolder.clear();
                determineWrongBoxes.clear();
                // pay the player
                AddWinToBalance();
                gameCompleteNowResetButton();
                jButton27.setText("Start Game");
                jTextField3.setText("0.00");
            } else{
              JOptionPane.showMessageDialog(null, "Must Play Atleast Once to Cash Out.");  
            }
        } else {
            JOptionPane.showMessageDialog(null, "The Maximum Bet is $10,000, Bets Must be greater than $0 ");
        }
    }//GEN-LAST:event_jButton27ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton30ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton30ActionPerformed
        // TODO add your handling code here:
        jButton30.setOpaque(false);
        jButton30.setBackground(Color.green);
        jButton31.setOpaque(false);
        jButton28.setOpaque(false);
        jButton31.setBackground(Color.gray);
        jButton28.setBackground(Color.gray);
    }//GEN-LAST:event_jButton30ActionPerformed

    private void jButton31ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton31ActionPerformed
        // TODO add your handling code here:
        jButton30.setOpaque(false);
        jButton30.setBackground(Color.gray);
        jButton31.setOpaque(false);
        jButton28.setOpaque(false);
        jButton31.setBackground(Color.green);
        jButton28.setBackground(Color.gray);
    }//GEN-LAST:event_jButton31ActionPerformed

    private void jButton28ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton28ActionPerformed
        // TODO add your handling code here:
        jButton30.setOpaque(false);
        jButton30.setBackground(Color.gray);
        jButton31.setOpaque(false);
        jButton28.setOpaque(false);
        jButton31.setBackground(Color.gray);
        jButton28.setBackground(Color.green);
    }//GEN-LAST:event_jButton28ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (jButton2.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton2.setEnabled(true);
            jButton2.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton2.getBackground() != Color.green) { // in the clear 

            jButton2.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (jButton4.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton4.setEnabled(true);
            jButton4.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton4.getBackground() != Color.green) { // in the clear 

            jButton4.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        if (jButton5.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton5.setEnabled(true);
            jButton5.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton5.getBackground() != Color.green) { // in the clear 

            jButton5.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        if (jButton7.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton7.setEnabled(true);
            jButton7.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton7.getBackground() != Color.green) { // in the clear 

            jButton7.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        if (jButton8.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton8.setEnabled(true);
            jButton8.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton8.getBackground() != Color.green) { // in the clear 

            jButton8.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
      
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        if (jButton9.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton9.setEnabled(true);
            jButton9.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton9.getBackground() != Color.green) { // in the clear 

            jButton9.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
        
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        if (jButton10.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton10.setEnabled(true);
            jButton10.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton10.getBackground() != Color.green) { // in the clear 

            jButton10.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
           
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
                
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        if (jButton12.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton12.setEnabled(true);
            jButton12.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton12.getBackground() != Color.green) { // in the clear 

            jButton12.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
                
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        if (jButton13.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton13.setEnabled(true);
            jButton13.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton13.getBackground() != Color.green) { // in the clear 

            jButton13.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
          
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
                
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        if (jButton14.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton14.setEnabled(true);
            jButton14.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton14.getBackground() != Color.green) { // in the clear 

            jButton14.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
            
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        if (jButton15.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton15.setEnabled(true);
            jButton15.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton15.getBackground() != Color.green) { // in the clear 

            jButton15.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
             
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        if (jButton16.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton16.setEnabled(true);
            jButton16.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton16.getBackground() != Color.green) { // in the clear 

            jButton16.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
     
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        if (jButton17.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton17.setEnabled(true);
            jButton17.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton17.getBackground() != Color.green) { // in the clear 

            jButton17.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
           
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
                
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        if (jButton19.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton19.setEnabled(true);
            jButton19.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton19.getBackground() != Color.green) { // in the clear 

            jButton19.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
              
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        if (jButton20.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton20.setEnabled(true);
            jButton20.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton20.getBackground() != Color.green) { // in the clear 

            jButton20.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
                
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
       if (jButton21.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton21.setEnabled(true);
            jButton21.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton21.getBackground() != Color.green) { // in the clear 

            jButton21.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        if (jButton22.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton22.setEnabled(true);
            jButton22.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton22.getBackground() != Color.green) { // in the clear 

            jButton22.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
          
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
              
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        if (jButton24.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton24.setEnabled(true);
            jButton24.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton24.getBackground() != Color.green) { // in the clear 

            jButton24.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
            
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
               
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }

    }//GEN-LAST:event_jButton24ActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        if (jButton25.getName() != null) { // then its a BOMB
            //JOptionPane.showMessageDialog(null, "name is > " + jButton6.getName());
            //jButton6.setBackground(Color.red);
            lostGame();
            jButton25.setEnabled(true);
            jButton25.setBackground(Color.red);
            jTextField3.setText("0.00");

        } else if (jButton25.getBackground() != Color.green) { // in the clear 

            jButton25.setBackground(Color.green);
            int trackingNumBoxesLeft = trackingNumBoxesLeft();
           
            if (trackingNumBoxesLeft == 3) { // then max prize is won!
                JOptionPane.showMessageDialog(null, "You've Just WON HUGEEEEE Money !!!!!!");
            }
            if (trackingNumBoxesLeft == 24) {

                String payCount3 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),"0");
              
                jTextField3.setText(payCount3);
                validate();
            }
            if (trackingNumBoxesLeft != 24) {
                String textCO = jTextField1.getText();
                double CO = parseDouble(textCO); // cashout prev
                String payCount2 = payCount(trackingNumBoxesLeft,determineWrongBoxes.get(0),doubleHolder.get(0));
                double nextCO = parseDouble(payCount2);
                double newCO = CO * nextCO;
                DecimalFormat df = new DecimalFormat("#.##");
                double sendBackDecimal = Double.valueOf(df.format(nextCO));
                String newerCashOut = String.valueOf(sendBackDecimal);
                jTextField3.setText(newerCashOut);
            }

            // cashout value textField multiplier
            //sound of winning 
        }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BombsGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BombsGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BombsGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BombsGame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BombsGame(username).setVisible(true);
            }
        });
    }

    public String bombsLogic(int NumBombs) { // 3 bombs 7 bombs  15 bombs 
        Random rand = new Random();
        String bomb = "";

        if (NumBombs == 3) {

            while (check.size() != 3) { // not completed logic yet 
                int random_integer = rand.nextInt(1000 - 1) + 1;
                int WrongBox = random_integer % 25; // should be 25 here
                String convert = String.valueOf(WrongBox);
               
                if (check.contains(convert) == false) { // works first cause none inside 
                    check.add(convert);                 //adds if no dupes 
                
                } else { // number was already found 
                   

                }

            }
            for (int i = 0; i < check.size(); i++) {
                String addOn = check.get(i);
                bomb += addOn + " ";
            }

        } // num 3 
        if (NumBombs == 7) {
            while (check.size() != 7) { // not completed logic yet 
                int random_integer = rand.nextInt(1000 - 1) + 1;
                int WrongBox = random_integer % 25; // should be 25 here
                String convert = String.valueOf(WrongBox);
               
                if (check.contains(convert) == false) { // works first cause none inside 
                    check.add(convert);                 //adds if no dupes 
                  
                } else { // number was already found 
                    

                }
            }
            for (int i = 0; i < check.size(); i++) {
                String addOn = check.get(i);
                bomb += addOn + " ";
            }
        } // num 7

        if (NumBombs == 15) {

            while (check.size() != 15) { // not completed logic yet 
                int random_integer = rand.nextInt(1000 - 1) + 1;
                int WrongBox = random_integer % 25; // should be 25 here
                String convert = String.valueOf(WrongBox);
               
                if (check.contains(convert) == false) { // works first cause none inside 
                    check.add(convert);                 //adds if no dupes 
                   
                } else { // number was already found 
                   

                }

            }
            for (int i = 0; i < check.size(); i++) {
                String addOn = check.get(i);
                bomb += addOn + " ";
            }
        } // num 15 

        return bomb;

    }

    public void bombsResetGame() { // reset the bombs that were saved from logic 
        for (int i = 0; i < check.size(); i++) {
            check.clear();
            
        }
        //System.out.println("The Checker's size is > " +check.size());
    }

    public void startBombGame(String determinant) {
        String[] splitBoxes = determinant.split(" ");
        for (int i = 0; i < splitBoxes.length; i++) {
            String temp = splitBoxes[i];
            int tempNum = parseInt(temp);
           

            if (tempNum == 0) {
                jButton1.setName(temp);
            }
            if (tempNum == 1) {
                jButton2.setName(temp);
            }
            if (tempNum == 2) {
                jButton3.setName(temp);
            }
            if (tempNum == 3) {
                jButton4.setName(temp);
            }
            if (tempNum == 4) {
                jButton5.setName(temp);
            }
            if (tempNum == 5) {
                jButton6.setName(temp);
            }
            if (tempNum == 6) {
                jButton7.setName(temp);
            }
            if (tempNum == 7) {
                jButton8.setName(temp);
            }
            if (tempNum == 8) {
                jButton9.setName(temp);
            }
            if (tempNum == 9) {
                jButton10.setName(temp);
            }
            if (tempNum == 10) {
                jButton11.setName(temp);
            }
            if (tempNum == 11) {
                jButton12.setName(temp);
            }
            if (tempNum == 12) {
                jButton13.setName(temp);
            }
            if (tempNum == 13) {
                jButton14.setName(temp);
            }
            if (tempNum == 14) {
                jButton15.setName(temp);
            }
            if (tempNum == 15) {
                jButton16.setName(temp);
            }
            if (tempNum == 16) {
                jButton17.setName(temp);
            }
            if (tempNum == 17) {
                jButton18.setName(temp);
            }
            if (tempNum == 18) {
                jButton19.setName(temp);
            }
            if (tempNum == 19) {
                jButton20.setName(temp);
            }
            if (tempNum == 20) {
                jButton21.setName(temp);
            }
            if (tempNum == 21) {
                jButton22.setName(temp);
            }
            if (tempNum == 22) {
                jButton23.setName(temp);
            }
            if (tempNum == 23) {
                jButton24.setName(temp);
            }
            if (tempNum == 24) {
                jButton25.setName(temp);
            }

        }

    }

    public void disableOnStart() {
        jButton1.setEnabled(true);
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
        jButton4.setEnabled(true);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        jButton7.setEnabled(true);
        jButton8.setEnabled(true);
        jButton9.setEnabled(true);
        jButton10.setEnabled(true);
        jButton11.setEnabled(true);
        jButton12.setEnabled(true);
        jButton13.setEnabled(true);
        jButton14.setEnabled(true);
        jButton15.setEnabled(true);
        jButton16.setEnabled(true);
        jButton17.setEnabled(true);
        jButton18.setEnabled(true);
        jButton19.setEnabled(true);
        jButton20.setEnabled(true);
        jButton21.setEnabled(true);
        jButton22.setEnabled(true);
        jButton23.setEnabled(true);
        jButton24.setEnabled(true);
        jButton25.setEnabled(true);

        jButton31.setEnabled(false);
        jButton30.setEnabled(false);
        jButton28.setEnabled(false); // 3 7 or 15 buttons 

    }

    public void gameCompleteNowResetButton() {
        jButton31.setEnabled(true);
        jButton30.setEnabled(true);
        jButton28.setEnabled(true);
        check.clear();
        jButton1.setBackground(Color.blue);
        jButton2.setBackground(Color.blue);
        jButton3.setBackground(Color.blue);
        jButton4.setBackground(Color.blue);
        jButton5.setBackground(Color.blue);
        jButton6.setBackground(Color.blue);
        jButton7.setBackground(Color.blue);
        jButton8.setBackground(Color.blue);
        jButton9.setBackground(Color.blue);
        jButton10.setBackground(Color.blue);
        jButton11.setBackground(Color.blue);
        jButton12.setBackground(Color.blue);
        jButton13.setBackground(Color.blue);
        jButton14.setBackground(Color.blue);
        jButton15.setBackground(Color.blue);
        jButton16.setBackground(Color.blue);
        jButton17.setBackground(Color.blue);
        jButton18.setBackground(Color.blue);
        jButton19.setBackground(Color.blue);
        jButton20.setBackground(Color.blue);
        jButton21.setBackground(Color.blue);
        jButton22.setBackground(Color.blue);
        jButton23.setBackground(Color.blue);
        jButton24.setBackground(Color.blue);
        jButton25.setBackground(Color.blue);

        jButton1.setName(null);
        jButton2.setName(null);
        jButton3.setName(null);
        jButton4.setName(null);
        jButton5.setName(null);
        jButton6.setName(null);
        jButton7.setName(null);
        jButton8.setName(null);
        jButton9.setName(null);
        jButton10.setName(null);
        jButton11.setName(null);
        jButton12.setName(null);
        jButton13.setName(null);
        jButton14.setName(null);
        jButton15.setName(null);
        jButton16.setName(null);
        jButton17.setName(null);
        jButton18.setName(null);
        jButton19.setName(null);
        jButton20.setName(null);
        jButton21.setName(null);
        jButton22.setName(null);
        jButton23.setName(null);
        jButton24.setName(null);
        jButton25.setName(null);

        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        jButton8.setEnabled(false);
        jButton9.setEnabled(false);
        jButton10.setEnabled(false);
        jButton11.setEnabled(false);
        jButton12.setEnabled(false);
        jButton13.setEnabled(false);
        jButton14.setEnabled(false);
        jButton15.setEnabled(false);
        jButton16.setEnabled(false);
        jButton17.setEnabled(false);
        jButton18.setEnabled(false);
        jButton19.setEnabled(false);
        jButton20.setEnabled(false);
        jButton21.setEnabled(false);
        jButton22.setEnabled(false);
        jButton23.setEnabled(false);
        jButton24.setEnabled(false);
        jButton25.setEnabled(false);

    }

    public void lostGame() {
        soundE.setFile(wrongSound); // path to Correct.wav
                soundE.play();
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        jButton8.setEnabled(false);
        jButton9.setEnabled(false);
        jButton10.setEnabled(false);
        jButton11.setEnabled(false);
        jButton12.setEnabled(false);
        jButton13.setEnabled(false);
        jButton14.setEnabled(false);
        jButton15.setEnabled(false);
        jButton16.setEnabled(false);
        jButton17.setEnabled(false);
        jButton18.setEnabled(false);
        jButton19.setEnabled(false);
        jButton20.setEnabled(false);
        jButton21.setEnabled(false);
        jButton22.setEnabled(false);
        jButton23.setEnabled(false);
        jButton24.setEnabled(false);
        jButton25.setEnabled(false);

        jButton31.setEnabled(true);
        jButton30.setEnabled(true);
        jButton28.setEnabled(true);
        jTextField1.setEditable(true);
        jButton27.setText("Start Game");
    }

    public void refreshAllBlue() {
        jButton1.setBackground(Color.blue);
        jButton2.setBackground(Color.blue);
        jButton3.setBackground(Color.blue);
        jButton4.setBackground(Color.blue);
        jButton5.setBackground(Color.blue);
        jButton6.setBackground(Color.blue);
        jButton7.setBackground(Color.blue);
        jButton8.setBackground(Color.blue);
        jButton9.setBackground(Color.blue);
        jButton10.setBackground(Color.blue);
        jButton11.setBackground(Color.blue);
        jButton12.setBackground(Color.blue);
        jButton13.setBackground(Color.blue);
        jButton14.setBackground(Color.blue);
        jButton15.setBackground(Color.blue);
        jButton16.setBackground(Color.blue);
        jButton17.setBackground(Color.blue);
        jButton18.setBackground(Color.blue);
        jButton19.setBackground(Color.blue);
        jButton20.setBackground(Color.blue);
        jButton21.setBackground(Color.blue);
        jButton22.setBackground(Color.blue);
        jButton23.setBackground(Color.blue);
        jButton24.setBackground(Color.blue);
        jButton25.setBackground(Color.blue);
        jButton1.setName(null);
        jButton2.setName(null);
        jButton3.setName(null);
        jButton4.setName(null);
        jButton5.setName(null);
        jButton6.setName(null);
        jButton7.setName(null);
        jButton8.setName(null);
        jButton9.setName(null);
        jButton10.setName(null);
        jButton11.setName(null);
        jButton12.setName(null);
        jButton13.setName(null);
        jButton14.setName(null);
        jButton15.setName(null);
        jButton16.setName(null);
        jButton17.setName(null);
        jButton18.setName(null);
        jButton19.setName(null);
        jButton20.setName(null);
        jButton21.setName(null);
        jButton22.setName(null);
        jButton23.setName(null);
        jButton24.setName(null);
        jButton25.setName(null);

    }

    public int trackingNumBoxesLeft() {
        int number = 0;
        if (jButton1.getBackground() == Color.blue) {
            number++;
        }
        if (jButton2.getBackground() == Color.blue) {
            number++;
        }
        if (jButton3.getBackground() == Color.blue) {
            number++;
        }
        if (jButton4.getBackground() == Color.blue) {
            number++;
        }
        if (jButton5.getBackground() == Color.blue) {
            number++;
        }
        if (jButton6.getBackground() == Color.blue) {
            number++;
        }
        if (jButton7.getBackground() == Color.blue) {
            number++;
        }
        if (jButton8.getBackground() == Color.blue) {
            number++;
        }
        if (jButton9.getBackground() == Color.blue) {
            number++;
        }
        if (jButton10.getBackground() == Color.blue) {
            number++;
        }
        if (jButton11.getBackground() == Color.blue) {
            number++;
        }
        if (jButton12.getBackground() == Color.blue) {
            number++;
        }
        if (jButton13.getBackground() == Color.blue) {
            number++;
        }
        if (jButton14.getBackground() == Color.blue) {
            number++;
        }
        if (jButton15.getBackground() == Color.blue) {
            number++;
        }
        if (jButton16.getBackground() == Color.blue) {
            number++;
        }
        if (jButton17.getBackground() == Color.blue) {
            number++;
        }
        if (jButton18.getBackground() == Color.blue) {
            number++;
        }
        if (jButton19.getBackground() == Color.blue) {
            number++;
        }
        if (jButton20.getBackground() == Color.blue) {
            number++;
        }
        if (jButton21.getBackground() == Color.blue) {
            number++;
        }
        if (jButton22.getBackground() == Color.blue) {
            number++;
        }
        if (jButton23.getBackground() == Color.blue) {
            number++;
        }
        if (jButton24.getBackground() == Color.blue) {
            number++;
        }
        if (jButton25.getBackground() == Color.blue) {
            number++;
        }

        return number;

    }

    public String payCount(int box, int Deter, String lastMult) {
        soundE.setFile(correctSound); // path to Correct.wav
        soundE.play();
        double payRate = 0;
        String pRate = "";
        double stRate = 1.15;
        double pr1 = 1.1;
        double stRate2 = 1.35;
        double stRate3 = 2.42;
        String bet = jTextField1.getText();
        double theBet = parseDouble(bet);
        
        if(Deter==3){ // if multiplier is based on 3 bombs
            
        

        if (box == 24) {
            payRate = 1.10;
            pRate = String.valueOf(payRate*theBet);
            doubleHolder.add("1.10");
        } else if(box==23){
            doubleHolder.clear();
            doubleHolder.add("1.26");
          double mult = pr1*stRate;
          DecimalFormat df = new DecimalFormat("#.##");
          double sendBackDecimal = Double.valueOf(df.format(mult * theBet));

          pRate = String.valueOf(sendBackDecimal);
        } else{
          double actualLastMult = parseDouble(lastMult);
          double newer = actualLastMult*stRate; 
          DecimalFormat df = new DecimalFormat("#.##");
          double sendBackDecimal = Double.valueOf(df.format(newer * theBet));
          String updateOldRate= String.valueOf(newer);
          doubleHolder.clear();
          doubleHolder.add(updateOldRate);
          pRate = String.valueOf(sendBackDecimal);
        }
        
        } // end of deter 3 
        
        if(Deter==7){ // if multiplier is based on 7 bombs
            
        

        if (box == 24) {
            payRate = 1.35;
            pRate = String.valueOf(payRate*theBet);
            doubleHolder.add("1.35");
        } else if(box==23){
            doubleHolder.clear();
            doubleHolder.add("1.90");
          double mult = 1.9;
          DecimalFormat df = new DecimalFormat("#.##");
          double sendBackDecimal = Double.valueOf(df.format(mult * theBet));

          pRate = String.valueOf(sendBackDecimal);
        } else{
          double rateToMultWith = (((24-box)*(.05))+stRate2);
          double actualLastMult = parseDouble(lastMult);
          double newer = actualLastMult*rateToMultWith; 
          DecimalFormat df = new DecimalFormat("#.##");
          double sendBackDecimal = Double.valueOf(df.format(newer * theBet));
          String updateOldRate= String.valueOf(newer);
          doubleHolder.clear();
          doubleHolder.add(updateOldRate);
          pRate = String.valueOf(sendBackDecimal);
        }
        
        } // end of deter 7
        
        if(Deter==15){ // if multiplier is based on 15 bombs
            
        

        if (box == 24) {
            payRate = 2.42;
            pRate = String.valueOf(payRate*theBet);
            doubleHolder.add("2.42");
        } else if(box==23){
            doubleHolder.clear();
            doubleHolder.add("6.47");
          double mult = 6.47;
          DecimalFormat df = new DecimalFormat("#.##");
          double sendBackDecimal = Double.valueOf(df.format(mult * theBet));

          pRate = String.valueOf(sendBackDecimal);
        } else{
          double rateToMultWith = (((24-box)*(.25))+stRate3);
          double actualLastMult = parseDouble(lastMult);
          double newer = actualLastMult*rateToMultWith; 
          DecimalFormat df = new DecimalFormat("#.##");
          double sendBackDecimal = Double.valueOf(df.format(newer * theBet));
          String updateOldRate= String.valueOf(newer);
          doubleHolder.clear();
          doubleHolder.add(updateOldRate);
          pRate = String.valueOf(sendBackDecimal);
        }
        
        } // end of deter 15

        return pRate;
    }

    public boolean checkIfPlayerPlayed() {
        boolean track = false;
        if (jButton1.getBackground() == Color.blue
                && jButton2.getBackground() == Color.blue
                && jButton3.getBackground() == Color.blue
                && jButton4.getBackground() == Color.blue
                && jButton5.getBackground() == Color.blue
                && jButton6.getBackground() == Color.blue
                && jButton7.getBackground() == Color.blue
                && jButton8.getBackground() == Color.blue
                && jButton9.getBackground() == Color.blue
                && jButton10.getBackground() == Color.blue
                && jButton11.getBackground() == Color.blue
                && jButton12.getBackground() == Color.blue
                && jButton13.getBackground() == Color.blue
                && jButton14.getBackground() == Color.blue
                && jButton15.getBackground() == Color.blue
                && jButton16.getBackground() == Color.blue
                && jButton17.getBackground() == Color.blue
                && jButton18.getBackground() == Color.blue
                && jButton19.getBackground() == Color.blue
                && jButton20.getBackground() == Color.blue
                && jButton21.getBackground() == Color.blue
                && jButton22.getBackground() == Color.blue
                && jButton23.getBackground() == Color.blue
                && jButton24.getBackground() == Color.blue
                && jButton25.getBackground() == Color.blue) {
            track = true;
            
        }
        return track;

    }
    
    public boolean minusBetFromBalance(){
        boolean valid = true;
        String bet = jTextField1.getText();
        double betNum = parseDouble(bet);
        DecimalFormat df = new DecimalFormat("#.##");
        double sendBackDecimal = Double.valueOf(df.format(betNum));
        double oldBal = 0;
        try {
            
            
            // somehow incorperate the database info here Username + Pass
            String host = "jdbc:derby://localhost:1527/Accounts";
            String uName = "Allaccounts";
            String uPass = "accounts";

            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL2 = "SELECT * FROM USERINFO";
            ResultSet rs = stmt.executeQuery(SQL2);

            while (rs.next()) {
                String userN = rs.getString("Username");
                double userB = rs.getDouble("Balance");

                if (userN.equals(username)) {
                    oldBal = userB;
                    break;
                }

            }
            if(oldBal-sendBackDecimal>0 && sendBackDecimal<=10000){
                
            
            String SQL = "update userinfo set balance = ? where username = ?";
            //String query = "update users set num_points = ? where first_name = ?";
            PreparedStatement preparedStmt = con.prepareStatement(SQL);
            preparedStmt.setDouble(1, oldBal-sendBackDecimal);
            preparedStmt.setString(2, username);
            preparedStmt.executeUpdate();
            upDateBalance();
            validate();
            
            con.close();
            }else if(oldBal-sendBackDecimal<0){
                valid=false;
                JOptionPane.showMessageDialog(null, "Insufficient Funds, You can deposit money in the Game Hub.");
            } else if(sendBackDecimal>10000){
                //JOptionPane.showMessageDialog(null, "Maximum Bet is $10,000.");
            } else{
                
            }
            

        } catch (SQLException ex) {
            System.out.println("err");
            //Logger.getLogger(CasinoHome.class.getName()).log(Level.SEVERE, null, ex);
            //JOptionPane.showMessageDialog(null, "That Username has already been selected, choose another one");
            System.out.println(ex.getMessage());
        }
        return valid;
        
    }
    
    public void upDateBalance(){
        try{
        String host = "jdbc:derby://localhost:1527/Accounts";
        String uName = "Allaccounts";
        String uPass = "accounts";
        Connection con = DriverManager.getConnection(host,uName,uPass);
        Statement stmt = con.createStatement();
        String SQL = "SELECT * FROM USERINFO";
        ResultSet rs = stmt.executeQuery(SQL);
        
        while (rs.next()){
         String userN = rs.getString("Username");
         double userB = rs.getDouble("Balance");
         DecimalFormat df = new DecimalFormat("#.##");
        double sendBackDecimal = Double.valueOf(df.format(userB));
         
         
         if(userN.equals(username)){
         String convert = String.valueOf(sendBackDecimal);
         jTextField2.setText("$"+convert);
         
         }  
         
        } // end while 
        
        
        }catch(SQLException ex){
        System.out.println("error");    
        }
    }
    
    public void AddWinToBalance(){
        
        String wins = jTextField3.getText();
        double betNum = parseDouble(wins);
        DecimalFormat df = new DecimalFormat("#.##");
        double sendBackDecimal = Double.valueOf(df.format(betNum));
        double oldBal = 0;
        try {
            
            
            // somehow incorperate the database info here Username + Pass
            String host = "jdbc:derby://localhost:1527/Accounts";
            String uName = "Allaccounts";
            String uPass = "accounts";

            Connection con = DriverManager.getConnection(host, uName, uPass);
            Statement stmt = con.createStatement();
            String SQL2 = "SELECT * FROM USERINFO";
            ResultSet rs = stmt.executeQuery(SQL2);

            while (rs.next()) {
                String userN = rs.getString("Username");
                double userB = rs.getDouble("Balance");

                if (userN.equals(username)) {
                    oldBal = userB;
                    break;
                }

            }
            
            String SQL = "update userinfo set balance = ? where username = ?";
            //String query = "update users set num_points = ? where first_name = ?";
            PreparedStatement preparedStmt = con.prepareStatement(SQL);
            preparedStmt.setDouble(1, oldBal+sendBackDecimal);
            preparedStmt.setString(2, username);
            preparedStmt.executeUpdate();
            upDateBalance();
            validate();
            
            con.close();
            
            

        } catch (SQLException ex) {
            System.out.println("err");
            //Logger.getLogger(CasinoHome.class.getName()).log(Level.SEVERE, null, ex);
            //JOptionPane.showMessageDialog(null, "That Username has already been selected, choose another one");
            System.out.println(ex.getMessage());
        }
        
        
    }
    public class SoundEffect {

        Clip sound; // use clip to play sound effect

        public void setFile(String soundFileName) {
            try {
                File file = new File(soundFileName);
                AudioInputStream soundAIS = AudioSystem.getAudioInputStream(file);
                sound = AudioSystem.getClip();
                sound.open(soundAIS);

            } catch (Exception e) {

            }

        }

        public void play() {
            sound.setFramePosition(0);
            sound.start();
        }

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton26;
    private javax.swing.JButton jButton27;
    private javax.swing.JButton jButton28;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton30;
    private javax.swing.JButton jButton31;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables
}
